{"version":3,"sources":["services/api.js","components/Search/Categories.jsx","components/Search/SearchBar.jsx","contexts/ShoppingCartProvider.js","components/ItemToCart.jsx","components/Products.jsx","components/ShoppingCart/ShoppingCartIcon.jsx","pages/Search.jsx","components/BackArrow.jsx","components/ShoppingCart/CheckoutProducts.jsx","components/QuantityButtons.jsx","components/ShoppingCart/ShoppingCartProduct.jsx","pages/ShoppingCart.jsx","pages/CheckoutProducts.jsx","components/ProductDetails/Rate.jsx","components/ProductDetails/ReviewCard.jsx","components/ProductDetails/Review.jsx","components/ProductDetails/ProductInfo.jsx","pages/ProductDetails.jsx","App.js","serviceWorker.js","index.js"],"names":["a","fetch","then","res","json","categoryId","query","getProductByID","productId","Categories","setCategory","search","useState","categories","setCategories","useEffect","api","length","map","category","htmlFor","id","key","name","data-testid","type","value","onClick","e","target","SearchBar","setSearch","queryButtonRef","onKeyDown","current","click","onChange","ShoppingCartContext","createContext","useProductCount","context","useContext","count","setProductCount","checkoutInfo","setCheckoutInfo","productQuantity","setProductQuantity","ShoppingCartProvider","children","totalPrice","Provider","addItem","product","opt","find","title","thumbnail","price","available_quantity","ItemToCart","props","filteredQuantity","filter","pid","undefined","p","quantity","Products","products","setProducts","loading","setLoading","results","className","to","src","alt","shipping","free_shipping","ShoppingCartIcon","reduce","ac","Search","useRef","setQuery","ref","BackArrow","hist","useHistory","goBack","CheckoutProducts","QuantityButtons","setPrice","setQuantity","quantityHandle","filteredCount","document","querySelector","style","display","priceHandle","toFixed","sub","sum","ShoppingCartProduct","ShoppingCart","href","onSubmit","preventDefault","placeholder","pattern","brazilianStates","val","Rate","handleClickStars","Array","x","num","role","tabIndex","onKeyPress","star","i","querySelectorAll","innerHTML","n","ReviewCard","review","email","stars","text","Review","setReview","oldReview","data","setData","innerText","handleChange","elem","String","Math","random","items","localStorage","getItem","JSON","parse","stringify","setItem","required","cols","rows","ProductInfo","regex","RegExp","replace","attributes","value_name","ProductDetails","setProduct","urlID","useParams","pQuantity","fetchedProduct","fetchData","obj","App","basename","process","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1664d37a.chunk.js","sourcesContent":["export async function getCategories() {\r\n  return fetch(\r\n    'https://api.mercadolibre.com/sites/MLB/categories',\r\n  ).then((res) => res.json());\r\n}\r\n\r\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\r\n  return fetch(\r\n    `https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`,\r\n  ).then((res) => res.json());\r\n}\r\n\r\nexport async function getProductByID(productId) {\r\n  return fetch(\r\n    `https://api.mercadolibre.com/items/${productId}`,\r\n  ).then((res) => res.json());\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport Proptypes from 'prop-types';\nimport * as api from '../../services/api';\n\nconst Categories = ({ setCategory, search }) => {\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    api.getCategories().then((res) => {\n      setCategories(res);\n    });\n  }, []);\n\n  if (categories.length === 0) {\n    return (<p>carregando</p>);\n  }\n\n  return (\n    categories.map(\n      (category) => (\n        <label htmlFor={ category.id } key={ category.name } data-testid=\"category\">\n          <input\n            type=\"radio\"\n            value={ category.id }\n            id={ category.id }\n            name=\"category\"\n            onClick={ (e) => setCategory({ search, category: e.target.value }) }\n          />\n          {category.name}\n        </label>\n      ),\n    )\n  );\n};\n\nCategories.propTypes = {\n  setCategory: Proptypes.func.isRequired,\n  search: Proptypes.string.isRequired,\n};\n\nexport default Categories;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchBar = ({ setSearch, category, queryButtonRef }) => (\n  <div id=\"search-bar-container\">\n    <label\n      htmlFor=\"search-bar\"\n      data-testid=\"home-initial-message\"\n      id=\"initial-message\"\n    >\n      <input\n        type=\"text\"\n        id=\"search-bar\"\n        data-testid=\"query-input\"\n        onKeyDown={(e) => {\n          if (e.key === 'Enter' && queryButtonRef.current) {\n            queryButtonRef.current.click();\n          }\n        }}\n        onChange={ (e) => setSearch({ search: e.target.value, category }) }\n      />\n      <br />\n      Digite algum termo de pesquisa ou escolha uma categoria\n    </label>\n  </div>\n);\n\nSearchBar.propTypes = {\n  setSearch: PropTypes.func.isRequired,\n  category: PropTypes.string.isRequired,\n  queryButtonRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]),\n};\n\nexport default SearchBar;\n","import React, { createContext, useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ShoppingCartContext = createContext();\n\nfunction ShoppingCartProvider({ children }) {\n  const [count, setProductCount] = useState([]);\n  const [checkoutInfo, setCheckoutInfo] = useState({ totalPrice: 0 });\n  const [productQuantity, setProductQuantity] = useState([]);\n  return (\n    <ShoppingCartContext.Provider\n      value={\n        { count,\n          setProductCount,\n          checkoutInfo,\n          setCheckoutInfo,\n          productQuantity,\n          setProductQuantity }\n      }\n    >\n      {children}\n    </ShoppingCartContext.Provider>\n  );\n}\n\nShoppingCartProvider.propTypes = {\n  children: PropTypes.shape({\n    $$typeof: PropTypes.symbol,\n  }).isRequired,\n};\n\nexport function useProductCount() {\n  const context = useContext(ShoppingCartContext);\n  const {\n    count, setProductCount,\n    checkoutInfo, setCheckoutInfo,\n    productQuantity, setProductQuantity,\n  } = context;\n  return {\n    count,\n    setProductCount,\n    checkoutInfo,\n    setCheckoutInfo,\n    productQuantity,\n    setProductQuantity,\n  };\n}\n\nexport default ShoppingCartProvider;\n","export function addItem(product, { setProductCount, count }, opt) {\n  if (!count.find(({ id }) => id === product.id) && opt) {\n    setProductCount([...count,\n      { title: product.title,\n        id: product.id,\n        thumbnail: product.thumbnail,\n        price: product.price,\n        available_quantity: product.available_quantity,\n      }]);\n  }\n}\n\nconst ItemToCart = ({ props, product }) => {\n  const { count, setProductCount,\n    productQuantity, setProductQuantity,\n    setCheckoutInfo, checkoutInfo } = props;\n\n  const filteredQuantity = productQuantity.filter(\n    ({ id: pid }) => pid !== product.id || pid === undefined,\n  );\n  // Add item to shopping cart\n  addItem(product, { setProductCount, count }, true);\n\n  // Search for a product then add it to quantity state.\n  const p = productQuantity.find(\n    ({ id }) => id === product.id,\n  );\n\n  if (((p === undefined) ? 0 : p.quantity) < product.available_quantity) {\n    setProductQuantity([\n      ...filteredQuantity,\n      {\n        id: product.id,\n        quantity: (p === undefined) ? 1 : p.quantity + 1,\n      }]);\n    // Setting total price for products\n    setCheckoutInfo({\n      totalPrice: checkoutInfo.totalPrice + product.price });\n  }\n};\n\nexport default ItemToCart;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useProductCount } from '../contexts/ShoppingCartProvider';\nimport * as api from '../services/api';\nimport ItemToCart from './ItemToCart';\n\nconst Products = ({ search, category }) => {\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const { count, setProductCount,\n    productQuantity, setProductQuantity,\n    setCheckoutInfo, checkoutInfo } = useProductCount();\n  const props = {\n    count,\n    setProductCount,\n    productQuantity,\n    setProductQuantity,\n    setCheckoutInfo,\n    checkoutInfo,\n  };\n\n  useEffect(() => {\n    api.getProductsFromCategoryAndQuery(category, search).then((res) => {\n      setProducts(res.results);\n      setLoading(false);\n    });\n  }, [category, search]);\n\n  if (loading) return <h1>Carregando...</h1>;\n\n  return (\n    <>\n      {products.map((product) => (\n        <div className=\"product\" data-testid=\"product-detail-link\" key={ product.id }>\n          <p data-testid=\"product\">\n            <Link to={ `/${product.id}` }>\n              {product.title}\n            </Link>\n          </p>\n          <div>\n            <img src={ `${product.thumbnail}` } alt={ `${product.title}` } />\n            {product.shipping.free_shipping\n            && (\n              <span>\n                <img\n                  src=\"images/free-shipping.png\"\n                  alt=\"free shipping icon\"\n                  className=\"free-shipping\"\n                  data-testid=\"free-shipping\"\n                />\n                Frete Grátis\n              </span>\n            )}\n          </div>\n          <button\n            type=\"button\"\n            data-testid=\"product-detail-add-to-cart\"\n            className=\"add-to-cart-button\"\n            onClick={ () => ItemToCart({ props, product }) }\n          >\n            Adicionar ao carrinho\n          </button>\n          <p data-testid=\"product\" className=\"price\">{product.price}</p>\n        </div>\n      ))}\n    </>\n  );\n};\n\nProducts.propTypes = {\n  search: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n};\n\nexport default Products;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useProductCount } from '../../contexts/ShoppingCartProvider';\n\nconst ShoppingCartIcon = () => {\n  const { productQuantity } = useProductCount();\n\n  return (\n    <Link to=\"/shopping-cart\" id=\"shopping-icon\">\n      <button type=\"button\" data-testid=\"shopping-cart-button\" className=\"icon-button\">\n        <span\n          className=\"product-count\"\n          data-testid=\"shopping-cart-size\"\n        >\n          {productQuantity.reduce((ac, { quantity }) => ac + quantity, 0)}\n        </span>\n        <img src=\"/images/shopping-cart.png\" alt=\"shpping cart icon\" />\n      </button>\n    </Link>\n  );\n};\n\nexport default ShoppingCartIcon;\n","import React, { useState, useRef } from 'react';\nimport Categories from '../components/Search/Categories';\nimport SearchBar from '../components/Search/SearchBar';\nimport Products from '../components/Products';\nimport { useProductCount } from '../contexts/ShoppingCartProvider';\nimport ShoppingCartIcon from '../components/ShoppingCart/ShoppingCartIcon';\n\nconst Search = () => {\n  const [search, setSearch] = useState('');\n  const queryButtonRef = useRef(null);\n  const [category, setCategory] = useState('');\n  const [query, setQuery] = useState({ search: '', category: '' });\n  const { count } = useProductCount();\n  return (\n    <div className=\"search-form\">\n      <div className=\"categories\">\n        <p>Categorias: </p>\n        <Categories setCategory={ setQuery } search={ query.search } />\n      </div>\n      <div className=\"container\">\n        <div>\n          <SearchBar setSearch={ setQuery } category={ query.category } queryButtonRef={queryButtonRef} />\n          <button\n            type=\"button\"\n            data-testid=\"query-button\"\n            id=\"query-button\"\n            ref={queryButtonRef}\n            onClick={ () => {\n              setCategory(query.search);\n              setSearch(query.search);\n            } }\n          >\n            Search\n          </button>\n        </div>\n        {(search !== '' && category !== '')\n          && (\n            <Products\n              search={ search }\n              category={ category }\n            />\n          ) }\n      </div>\n      <ShoppingCartIcon count={ count } />\n    </div>\n  );\n};\n\nexport default Search;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport default function BackArrow() {\n  const hist = useHistory();\n  return (\n    <button type=\"button\" className=\"icon-button\" onClick={ hist.goBack } id=\"back-arrow\">\n      <img src=\"https://img.icons8.com/ios-filled/50/000000/circled-left-2.png\" alt=\"previous page arrow\" />\n    </button>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst CheckoutProducts = () => (\n  <Link to=\"/checkout-products\">\n    <button type=\"button\" data-testid=\"checkout-product\" className=\"icon-button\">\n      <img src=\"/images/checkout.png\" alt=\"shopping cart icon\" />\n    </button>\n  </Link>\n);\n\nexport default CheckoutProducts;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useProductCount } from '../contexts/ShoppingCartProvider';\n\nconst QuantityButtons = ({ setPrice, price, product }) => {\n  const { setCheckoutInfo,\n    productQuantity: quantity, setProductQuantity: setQuantity,\n    count, setProductCount } = useProductCount();\n  const [productQuantity, setProductQuantity] = useState(\n    quantity.find(({ id }) => id === product.id).quantity,\n  );\n\n  const quantityHandle = (value) => {\n    const { id } = product;\n    setProductQuantity(value);\n\n    const filteredQuantity = quantity.filter(\n      ({ id: pid }) => pid !== id || pid === undefined,\n    );\n\n    setQuantity([\n      ...filteredQuantity,\n      { id, quantity: value }]);\n\n    if (value === 0) {\n      const filteredCount = count.filter(({ id: pid }) => id !== pid);\n      setProductCount(filteredCount);\n    }\n  };\n\n  useEffect(() => {\n    if (productQuantity >= product.available_quantity) {\n      document.querySelector(`#${product.id}`).style.display = 'none';\n    } else {\n      document.querySelector(`#${product.id}`).style.display = 'initial';\n    }\n  }, [productQuantity, product.available_quantity, product.id]);\n\n  const priceHandle = (value) => {\n    setPrice(value);\n\n    setCheckoutInfo({ totalPrice: value.toFixed(2) });\n  };\n\n  return (\n    <div>\n      <button\n        data-testid=\"product-increase-quantity\"\n        type=\"button\"\n        onClick={ () => {\n          const sub = price - product.price;\n          priceHandle((productQuantity > 0) ? sub : price);\n          quantityHandle((productQuantity === 0) ? 0 : productQuantity - 1);\n        } }\n      >\n        -\n      </button>\n      <span>{productQuantity}</span>\n      <button\n        data-testid=\"product-decrease-quantity\"\n        type=\"button\"\n        id={ product.id }\n        onClick={ () => {\n          const sum = price + product.price;\n          priceHandle(sum);\n          quantityHandle(productQuantity + 1);\n        } }\n      >\n        +\n      </button>\n    </div>\n  );\n};\n\nQuantityButtons.propTypes = {\n  product: PropTypes.oneOfType(\n    [\n      PropTypes.string,\n      PropTypes.object,\n    ],\n  ).isRequired,\n  setPrice: PropTypes.func.isRequired,\n  price: PropTypes.number.isRequired,\n};\n\nexport default QuantityButtons;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport QuantityButtons from '../QuantityButtons';\n\nconst ShoppingCartProduct = ({ product, setPrice, price }) => (\n  <div className=\"product-cart-card\">\n    <div className=\"product-image\"><img src={ product.thumbnail } alt={ product.title } /></div>\n    <p data-testid=\"shopping-cart-product-name\">\n      {product.title}\n    </p>\n    <QuantityButtons setPrice={ setPrice } price={ price } product={ product } />\n    <p className=\"price\">\n      {product.price}\n    </p>\n  </div>\n);\n\nShoppingCartProduct.propTypes = {\n  product: PropTypes.oneOfType(\n    [\n      PropTypes.string,\n      PropTypes.object,\n    ],\n  ).isRequired,\n  setPrice: PropTypes.func.isRequired,\n  price: PropTypes.number.isRequired,\n};\n\nexport default ShoppingCartProduct;\n","import React, { useState } from 'react';\nimport BackArrow from '../components/BackArrow';\nimport CheckoutProducts from '../components/ShoppingCart/CheckoutProducts';\nimport ShoppingCartProduct from '../components/ShoppingCart/ShoppingCartProduct';\nimport { useProductCount } from '../contexts/ShoppingCartProvider';\n\nconst ShoppingCart = () => {\n  const { count, checkoutInfo } = useProductCount();\n  const [price, setPrice] = useState(checkoutInfo.totalPrice);\n\n  return (\n    <>\n      <header className=\"shopping-cart-header\">\n        <BackArrow />\n        <CheckoutProducts />\n      </header>\n      {count.length < 1\n        ? (\n          <h1 data-testid=\"shopping-cart-empty-message\" id=\"shopping-cart-empty-message\">\n            O seu carrinho está vazio\n          </h1>\n        )\n        : (\n          <div className=\"products-in-cart\">\n            {count.map((product) => (\n              <ShoppingCartProduct\n                price={ price }\n                setPrice={ setPrice }\n                product={ product }\n                key={ product.id }\n              />\n            ))}\n            <span className=\"price total-price\">\n              {checkoutInfo.totalPrice}\n            </span>\n          </div>\n        )}\n      <p><a href=\"https://icons8.com/icon/26191/back-arrow\">Back Arrow icon by Icons8</a></p>\n    </>\n  );\n};\n\nexport default ShoppingCart;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport BackArrow from '../components/BackArrow';\nimport { useProductCount } from '../contexts/ShoppingCartProvider';\nimport brazilianStates from '../data/brazilianStates.json'\n\nconst CheckoutProducts = () => {\n  const { count, checkoutInfo } = useProductCount();\n\n  const handleForm = () => <Redirect to=\"/\" />;\n  if (checkoutInfo.totalPrice === 0) return <Redirect to=\"/\" />;\n\n  return (\n    <form\n      onSubmit={ (e) => {\n        e.preventDefault();\n        handleForm();\n      } }\n    >\n      <BackArrow />\n      <div className=\"products\">\n        <h2>Revise seus Produtos</h2>\n        {count.map((product) => (\n          <div key={ product.id }>\n            <img src={ product.thumbnail } alt={ product.title } />\n            <p>{product.title}</p>\n            <p className=\"price\">{product.price}</p>\n          </div>\n        ))}\n        <span className=\"price total-price\">{checkoutInfo.totalPrice}</span>\n      </div>\n      <h2>Informações do Comprador</h2>\n      <div className=\"client-info\">\n        <div>\n          <input\n            type=\"text\"\n            id=\"full-name\"\n            placeholder=\"Nome Completo\"\n            data-testid=\"checkout-fullname\"\n          />\n          <input\n            type=\"text\"\n            id=\"cpf\"\n            placeholder=\"CPF\"\n            data-testid=\"checkout-cpf\"\n          />\n          <input\n            type=\"email\"\n            id=\"client-email\"\n            placeholder=\"Email\"\n            data-testid=\"checkout-email\"\n          />\n          <input\n            type=\"tel\"\n            id=\"telephone\"\n            placeholder=\"Telefone\"\n            data-testid=\"checkout-phone\"\n          />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"CEP\"\n            title=\"Please enter a Zip Code\"\n            pattern=\"^\\s*?\\d{5}(?:[-\\s]\\d{4})?\\s*?$\"\n            data-testid=\"checkout-cep\"\n          />\n          <input\n            type=\"text\"\n            id=\"address\"\n            placeholder=\"Endereço\"\n            data-testid=\"checkout-address\"\n          />\n        </div>\n        <div>\n          <input type=\"text\" id=\"complement\" placeholder=\"Complemento\" />\n          <input type=\"number\" id=\"house-number\" placeholder=\"Número\" />\n          <input type=\"text\" id=\"city\" placeholder=\"Cidade\" />\n          <select id=\"state\" placeholder=\"Estado\">\n            {brazilianStates.map(\n              (val) => <option key={val} value={val}>{val}</option>\n            )}\n          </select>\n        </div>\n        <h2>Métodos de Pagamento</h2>\n        <div className=\"payment-method\">\n          <label htmlFor=\"boleto\">\n            <input type=\"radio\" name=\"payment\" value=\"boleto\" id=\"boleto\" />\n            Boleto\n          </label>\n          <p>Cartão de crédito</p>\n          <div id=\"credit-card\">\n            <label htmlFor=\"visa\">\n              <input type=\"radio\" name=\"payment\" value=\"visa\" id=\"visa\" />\n              Visa\n            </label>\n            <label htmlFor=\"mastercard\">\n              <input type=\"radio\" name=\"payment\" value=\"mastercard\" id=\"mastercard\" />\n              MasterCard\n            </label>\n            <label htmlFor=\"elo\">\n              <input type=\"radio\" name=\"payment\" value=\"elo\" id=\"elo\" />\n              Elo\n            </label>\n          </div>\n        </div>\n      </div>\n      <button type=\"submit\" id=\"confirm-purchase-button\">Comprar</button>\n    </form>\n  );\n};\n\nexport default CheckoutProducts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Rate = ({ handleClickStars }) => {\n  const iterationNumber = 5;\n  return (\n    [...Array(iterationNumber)].map((x, num) => (\n      <span\n        key={ num + 1 }\n        className=\"star\"\n        role=\"button\"\n        tabIndex={ 0 }\n        onKeyPress={ () => {} }\n        onClick={ () => {\n          const maxStars = 4;\n          const star = (i) => document.querySelectorAll('.star')[i];\n          for (let i = 0; i <= num; i += 1) {\n            star(i).innerHTML = '&#9733;';\n          }\n          for (let n = num + 1; n <= maxStars; n += 1) {\n            star(n).innerHTML = '&#9734;';\n          }\n          handleClickStars();\n        } }\n      >\n        &#9734;\n      </span>\n    ))\n  );\n};\n\nRate.propTypes = {\n  handleClickStars: PropTypes.func.isRequired,\n};\n\nexport default Rate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ReviewCard = ({ review }) => (\n  <div className=\"review-card\">\n    <div>\n      <p>{review.email}</p>\n      <p>{review.stars}</p>\n    </div>\n    <p>{review.text}</p>\n  </div>\n);\n\nReviewCard.propTypes = {\n  review: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nexport default ReviewCard;\n","import React, { useState } from 'react';\nimport PropTypes, { arrayOf } from 'prop-types';\nimport Rate from './Rate';\nimport ReviewCard from './ReviewCard';\n\nconst Review = ({ setReview, oldReview, id }) => {\n  const [data, setData] = useState({ email: '', stars: '', text: '' });\n\n  const handleClickStars = () => {\n    const stars = document.querySelector('#email-line').innerText;\n    setData({ ...data, stars });\n  };\n\n  const handleChange = (elem) => setData(\n    { ...data, [elem.id]: elem.value },\n  );\n\n  return (\n    <form\n      className=\"review-form\"\n      onSubmit={ (e) => {\n        e.preventDefault();\n        setReview(\n          [...oldReview,\n            <ReviewCard review={ data } key={ String(Math.random()) } />,\n          ],\n        );\n        const items = (localStorage.getItem(id))\n          ? [data, ...JSON.parse(localStorage.getItem(id))]\n          : `[${JSON.stringify(data)}]`;\n\n        localStorage.setItem(id, (localStorage.getItem(id))\n          ? JSON.stringify(items)\n          : items);\n      } }\n    >\n      <div id=\"email-line\">\n        <input\n          required\n          type=\"email\"\n          placeholder=\"Email\"\n          id=\"email\"\n          onClick={ () => handleClickStars() }\n          onChange={ (e) => handleChange(e.target) }\n        />\n        <Rate handleClickStars={ handleClickStars } />\n      </div>\n      <textarea\n        required\n        cols=\"45\"\n        data-testid=\"product-detail-evaluation\"\n        rows=\"10\"\n        placeholder=\"Mensagem (Opcional)\"\n        id=\"text\"\n        onChange={ (e) => handleChange(e.target) }\n      />\n      <button\n        type=\"submit\"\n      >\n        Avaliar\n      </button>\n    </form>\n  );\n};\n\nReview.propTypes = {\n  setReview: PropTypes.func.isRequired,\n  oldReview: PropTypes.oneOfType([arrayOf(PropTypes.object), PropTypes.array]).isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default Review;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProductInfo = ({ product }) => {\n  const regex = new RegExp('I.jpg$', 'ig');\n  return (\n    <>\n      <div>\n        <h1 data-testid=\"product-detail-name\">\n          {`${product.title} - R$${product.price}`}\n        </h1>\n        {product.shipping.free_shipping\n            && (\n              <span>\n                <img\n                  src=\"/images/free-shipping.png\"\n                  alt=\"free shipping icon\"\n                  className=\"free-shipping\"\n                  data-testid=\"free-shipping\"\n                />\n                Frete Grátis\n              </span>\n            )}\n      </div>\n      <div className=\"product-specs\">\n        <img\n          src={ (product.thumbnail !== undefined)\n            ? product.thumbnail.replace(regex, 'O.jpg')\n            : undefined }\n          alt={ product.title }\n        />\n        <ul>\n          {product.attributes !== undefined\n              && product.attributes.map(({ name, value_name: value, id }) => (\n                <li key={ id }>\n                  <strong>{`${name}: `}</strong>\n                  {value}\n                </li>\n              ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nProductInfo.propTypes = {\n  product: PropTypes.oneOfType(\n    [\n      PropTypes.string,\n      PropTypes.object,\n    ],\n  ).isRequired,\n};\n\nexport default ProductInfo;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport BackArrow from '../components/BackArrow';\nimport Review from '../components/ProductDetails/Review';\nimport ShoppingCartIcon from '../components/ShoppingCart/ShoppingCartIcon';\nimport { useProductCount } from '../contexts/ShoppingCartProvider';\nimport * as api from '../services/api';\nimport ReviewCard from '../components/ProductDetails/ReviewCard';\nimport { addItem } from '../components/ItemToCart';\nimport ProductInfo from '../components/ProductDetails/ProductInfo';\n\nconst ProductDetails = () => {\n  const [loading, setLoading] = useState(true);\n  const [product, setProduct] = useState({});\n  const { id: urlID } = useParams();\n  const { count, productQuantity, setProductQuantity,\n    checkoutInfo, setCheckoutInfo, setProductCount } = useProductCount();\n  const pQuantity = productQuantity.find(({ id }) => id === product.id);\n  const [quantity, setQuantity] = useState(0);\n  const [review, setReview] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const fetchedProduct = await api.getProductByID(urlID);\n      setProduct(fetchedProduct);\n    }\n    setLoading(false);\n    fetchData();\n  }, [urlID]);\n\n  if (loading) return <h1>Carregando...</h1>;\n\n  return (\n    <div className=\"shopping-cart\">\n      <BackArrow />\n      <div className=\"product-details\">\n        {product.title !== undefined && <ProductInfo product={ product } />}\n        <button\n          type=\"button\"\n          onClick={ () => setQuantity((quantity === 0) ? 0 : quantity - 1) }\n        >\n          -\n        </button>\n        <span>{quantity}</span>\n        {(((pQuantity === undefined)\n          ? 0 : pQuantity.quantity) < product.available_quantity\n          && quantity < product.available_quantity)\n          && (\n            <button\n              type=\"button\"\n              id=\"plus-button\"\n              onClick={ () => setQuantity(quantity + 1) }\n            >\n              +\n            </button>\n          )}\n        <button\n          type=\"button\"\n          data-testid=\"product-detail-add-to-cart\"\n          onClick={ () => {\n            const filteredQuantity = productQuantity.filter(\n              ({ id: pid }) => pid !== product.id || pid === undefined,\n            );\n            setProductQuantity([\n              ...filteredQuantity,\n              { id: product.id,\n                quantity: (pQuantity === undefined)\n                  ? 0 + quantity\n                  : pQuantity.quantity + quantity }]);\n\n            setCheckoutInfo({\n              totalPrice: checkoutInfo.totalPrice + (quantity * product.price) });\n\n            addItem(product, { setProductCount, count }, (quantity !== 0));\n            setQuantity(0);\n          } }\n        >\n          Adicionar ao carrinho\n        </button>\n        <Review\n          setReview={ setReview }\n          oldReview={ review }\n          id={ urlID }\n        />\n        <div className=\"reviews\">\n          {localStorage.getItem(urlID)\n          && JSON.parse(localStorage.getItem(urlID)).map(\n            (obj) => <ReviewCard review={ obj } key={ Math.random() } />,\n          )}\n        </div>\n      </div>\n      <ShoppingCartIcon count={ count } />\n    </div>\n  );\n};\n\nexport default ProductDetails;\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch as Routes } from 'react-router-dom';\r\nimport Search from './pages/Search';\r\nimport ShoppingCart from './pages/ShoppingCart';\r\nimport CheckoutProducts from './pages/CheckoutProducts';\r\nimport ProductDetails from './pages/ProductDetails';\r\nimport './App.css';\r\n\r\n// {\r\n//   \"id\": \"MLB5672\",\r\n//   \"name\": \"Acessórios para Veículos\"\r\n// },\r\nfunction App() {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Routes>\r\n        <Route exact path=\"/\" component={ Search } />\r\n        <Route exact path=\"/shopping-cart\" component={ ShoppingCart } />\r\n        <Route exact path=\"/checkout-products\" component={ CheckoutProducts } />\r\n        <Route exact path=\"/:id\" component={ ProductDetails } />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  const NOT_FOUND = 404;\r\n  const NOT_FOUND_IN_ARRAY = -1;\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  }).then((response) => {\r\n    // Ensure service worker exists, and that we really are getting a JS file.\r\n    const contentType = response.headers.get('content-type');\r\n    if (response.status === NOT_FOUND\r\n        || (contentType != null\r\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\r\n      // No service worker found. Probably a different app. Reload the page.\r\n      navigator.serviceWorker.ready.then((registration) => {\r\n        registration.unregister().then(() => {\r\n          window.location.reload();\r\n        });\r\n      });\r\n    } else {\r\n      // Service worker found. Proceed as normal.\r\n      registerValidSW(swUrl, config);\r\n    }\r\n  })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ShoppingCartProvider from './contexts/ShoppingCartProvider';\r\n\r\nReactDOM.render(\r\n    <ShoppingCartProvider>\r\n      <App />\r\n    </ShoppingCartProvider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}