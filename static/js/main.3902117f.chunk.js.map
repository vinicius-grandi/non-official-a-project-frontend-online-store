{"version":3,"sources":["serviceWorker.js","store/ShoppingCart.store.js","store/index.js","services/api.js","components/Search/Categories.jsx","components/Search/SearchBar.jsx","components/Products.jsx","components/ShoppingCart/ShoppingCartIcon.jsx","pages/Search.jsx","components/BackArrow.jsx","components/ShoppingCart/CheckoutProducts.jsx","components/QuantityButtons.jsx","components/ShoppingCart/ShoppingCartProduct.jsx","pages/ShoppingCart.jsx","pages/CheckoutProducts.jsx","components/ProductDetails/Rate.jsx","components/ProductDetails/ReviewCard.jsx","components/ProductDetails/Review.jsx","components/ProductDetails/ProductInfo.jsx","pages/ProductDetails.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","shoppingCart","createSlice","name","initialState","totalQuantity","productInfo","totalPrice","reducers","addProduct","state","product","payload","id","title","thumbnail","available_quantity","price","quantity","undefined","Math","round","removeProduct","addProductByQuantity","console","log","actions","store","configureStore","reducer","shoppingCartReducer","a","fetch","then","res","json","categoryId","query","getProductByID","productId","Categories","setCategory","search","useState","categories","setCategories","useEffect","api","length","map","category","htmlFor","key","data-testid","type","value","onClick","e","target","SearchBar","setSearch","queryButtonRef","onKeyDown","current","click","onChange","Products","products","setProducts","dispatch","useDispatch","loading","setLoading","results","className","to","src","alt","shipping","free_shipping","ShoppingCartIcon","useSelector","Search","useRef","setQuery","ref","BackArrow","hist","useHistory","goBack","CheckoutProducts","QuantityButtons","setPrice","productQuantity","setProductQuantity","quantityHandle","document","querySelector","style","display","priceHandle","sub","sum","ShoppingCartProduct","ShoppingCart","Object","values","href","onSubmit","preventDefault","placeholder","pattern","brazilianStates","val","Rate","handleClickStars","Array","x","num","role","tabIndex","onKeyPress","star","i","querySelectorAll","innerHTML","n","ReviewCard","review","email","stars","text","Review","setReview","oldReview","data","setData","innerText","handleChange","elem","String","random","items","localStorage","getItem","JSON","parse","stringify","setItem","required","cols","rows","ProductInfo","regex","RegExp","replace","attributes","value_name","ProductDetails","setProduct","urlID","useParams","pQuantity","setQuantity","fetchedProduct","fetchData","obj","App","basename","process","exact","path","component","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3902117f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  const NOT_FOUND = 404;\r\n  const NOT_FOUND_IN_ARRAY = -1;\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  }).then((response) => {\r\n    // Ensure service worker exists, and that we really are getting a JS file.\r\n    const contentType = response.headers.get('content-type');\r\n    if (response.status === NOT_FOUND\r\n        || (contentType != null\r\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\r\n      // No service worker found. Probably a different app. Reload the page.\r\n      navigator.serviceWorker.ready.then((registration) => {\r\n        registration.unregister().then(() => {\r\n          window.location.reload();\r\n        });\r\n      });\r\n    } else {\r\n      // Service worker found. Proceed as normal.\r\n      registerValidSW(swUrl, config);\r\n    }\r\n  })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst shoppingCart = createSlice({\n  name: 'shoppingCart',\n  initialState: {\n    totalQuantity: 0,\n    productInfo: {},\n    totalPrice: 0,\n  },\n  reducers: {\n    addProduct (state, product) {\n      const { id, title, thumbnail, available_quantity, price } = product.payload;\n\n      if (\n        state.productInfo[id]\n        && state.productInfo[id].quantity + 1 > available_quantity) {\n        return;\n      }\n\n      state.productInfo[id] = {\n        title,\n        id,\n        thumbnail,\n        price,\n        available_quantity,\n        quantity: state.productInfo[id] === undefined ? 1 : state.productInfo[id].quantity + 1,\n      };\n\n      state.totalQuantity += 1;\n      state.totalPrice = Math.round((state.totalPrice + price) * 100) / 100;\n    },\n\n    removeProduct (state, product) {\n      const { id, price } = product.payload;\n\n      if (state.productInfo[id].quantity - 1 <= 0) {\n        delete state.productInfo[id];\n      } else {\n        state.productInfo[id].quantity -= 1;\n      }\n\n      state.totalQuantity -= 1;\n      state.totalPrice = Math.round((state.totalPrice - price) * 100) / 100;\n    },\n    addProductByQuantity (state, product) {\n      const { id, title, thumbnail, available_quantity, price, quantity } = product.payload;\n\n      state.productInfo[id] = {\n        title,\n        id,\n        thumbnail,\n        price,\n        available_quantity,\n        quantity: state.productInfo[id] === undefined ? 1 : state.productInfo[id].quantity + quantity,\n      };\n      state.totalQuantity += quantity;\n      state.totalPrice += Math.round(price * quantity * 100) / 100;\n      console.log(state.totalPrice);\n    },\n  },\n});\n\nexport const { addProduct, removeProduct, addProductByQuantity } = shoppingCart.actions;\n\nexport default shoppingCart.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport shoppingCartReducer from './ShoppingCart.store';\n\nconst store = configureStore({\n  reducer: {\n    shoppingCart: shoppingCartReducer,\n  },\n});\n\nexport default store;\n","export async function getCategories() {\r\n  return fetch(\r\n    'https://api.mercadolibre.com/sites/MLB/categories',\r\n  ).then((res) => res.json());\r\n}\r\n\r\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\r\n  return fetch(\r\n    `https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`,\r\n  ).then((res) => res.json());\r\n}\r\n\r\nexport async function getProductByID(productId) {\r\n  return fetch(\r\n    `https://api.mercadolibre.com/items/${productId}`,\r\n  ).then((res) => res.json());\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport Proptypes from 'prop-types';\nimport * as api from '../../services/api';\n\nconst Categories = ({ setCategory, search }) => {\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    api.getCategories().then((res) => {\n      setCategories(res);\n    });\n  }, []);\n\n  if (categories.length === 0) {\n    return (<p>carregando</p>);\n  }\n\n  return (\n    categories.map(\n      (category) => (\n        <label htmlFor={ category.id } key={ category.name } data-testid=\"category\">\n          <input\n            type=\"radio\"\n            value={ category.id }\n            id={ category.id }\n            name=\"category\"\n            onClick={ (e) => setCategory({ search, category: e.target.value }) }\n          />\n          {category.name}\n        </label>\n      ),\n    )\n  );\n};\n\nCategories.propTypes = {\n  setCategory: Proptypes.func.isRequired,\n  search: Proptypes.string.isRequired,\n};\n\nexport default Categories;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchBar = ({ setSearch, category, queryButtonRef }) => (\n  <div id=\"search-bar-container\">\n    <label\n      htmlFor=\"search-bar\"\n      data-testid=\"home-initial-message\"\n      id=\"initial-message\"\n    >\n      <input\n        type=\"text\"\n        id=\"search-bar\"\n        data-testid=\"query-input\"\n        onKeyDown={(e) => {\n          if (e.key === 'Enter' && queryButtonRef.current) {\n            queryButtonRef.current.click();\n          }\n        }}\n        onChange={ (e) => setSearch({ search: e.target.value, category }) }\n      />\n      <br />\n      Digite algum termo de pesquisa ou escolha uma categoria\n    </label>\n  </div>\n);\n\nSearchBar.propTypes = {\n  setSearch: PropTypes.func.isRequired,\n  category: PropTypes.string.isRequired,\n  queryButtonRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]),\n};\n\nexport default SearchBar;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addProduct } from '../store/ShoppingCart.store';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as api from '../services/api';\n\nconst Products = ({ search, category }) => {\n  const [products, setProducts] = useState([]);\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    api.getProductsFromCategoryAndQuery(category, search).then((res) => {\n      setProducts(res.results);\n      setLoading(false);\n    });\n  }, [category, search]);\n\n  if (loading) return <h1>Carregando...</h1>;\n\n  return (\n    <>\n      {products.map((product) => (\n        <div className=\"product\" data-testid=\"product-detail-link\" key={ product.id }>\n          <p data-testid=\"product\">\n            <Link to={ `/${product.id}` }>\n              {product.title}\n            </Link>\n          </p>\n          <div>\n            <img src={ `${product.thumbnail}` } alt={ `${product.title}` } />\n            {product.shipping.free_shipping\n            && (\n              <span className=\"free-shipping\"\n              >\n                <img\n                  src=\"/non-official-a-project-frontend-online-store/images/free-shipping.png\"\n                  alt=\"free shipping icon\"\n                  data-testid=\"free-shipping\"\n                />\n                Frete Grátis\n              </span>\n            )}\n          </div>\n          <button\n            type=\"button\"\n            data-testid=\"product-detail-add-to-cart\"\n            className=\"add-to-cart-button\"\n            onClick={ () => {\n              dispatch(addProduct(product));\n            } }\n          >\n            Adicionar ao carrinho\n          </button>\n          <p data-testid=\"product\" className=\"price\">{product.price}</p>\n        </div>\n      ))}\n    </>\n  );\n};\n\nProducts.propTypes = {\n  search: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n};\n\nexport default Products;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nconst ShoppingCartIcon = () => {\n  const shoppingCart = useSelector((state) => state.shoppingCart);\n\n  return (\n    <Link to=\"/shopping-cart\" id=\"shopping-icon\">\n      <button type=\"button\" data-testid=\"shopping-cart-button\" className=\"icon-button\">\n        <span\n          className=\"product-count\"\n          data-testid=\"shopping-cart-size\"\n        >\n          {shoppingCart.totalQuantity}\n        </span>\n        <img src=\"/non-official-a-project-frontend-online-store/images/shopping-cart.png\" alt=\"shpping cart icon\" />\n      </button>\n    </Link>\n  );\n};\n\nexport default ShoppingCartIcon;\n","import React, { useState, useRef } from 'react';\nimport Categories from '../components/Search/Categories';\nimport SearchBar from '../components/Search/SearchBar';\nimport Products from '../components/Products';\nimport ShoppingCartIcon from '../components/ShoppingCart/ShoppingCartIcon';\n\nconst Search = () => {\n  const [search, setSearch] = useState('');\n  const queryButtonRef = useRef(null);\n  const [category, setCategory] = useState('');\n  const [query, setQuery] = useState({ search: '', category: '' });\n  return (\n    <div className=\"search-form\">\n      <div className=\"categories\">\n        <p>Categorias: </p>\n        <Categories setCategory={ setQuery } search={ query.search } />\n      </div>\n      <div className=\"container\">\n        <div>\n          <SearchBar setSearch={ setQuery } category={ query.category } queryButtonRef={queryButtonRef} />\n          <button\n            type=\"button\"\n            data-testid=\"query-button\"\n            id=\"query-button\"\n            ref={queryButtonRef}\n            onClick={ () => {\n              setCategory(query.search);\n              setSearch(query.search);\n            } }\n          >\n            Search\n          </button>\n        </div>\n        {(search !== '' && category !== '')\n          && (\n            <Products\n              search={ search }\n              category={ category }\n            />\n          ) }\n      </div>\n      <ShoppingCartIcon />\n    </div>\n  );\n};\n\nexport default Search;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport default function BackArrow() {\n  const hist = useHistory();\n  return (\n    <button type=\"button\" className=\"icon-button\" onClick={ hist.goBack } id=\"back-arrow\">\n      <img src=\"https://img.icons8.com/ios-filled/50/000000/circled-left-2.png\" alt=\"previous page arrow\" />\n    </button>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst CheckoutProducts = () => (\n  <Link to=\"/checkout-products\">\n    <button type=\"button\" data-testid=\"checkout-product\" className=\"icon-button\">\n      <img src=\"/non-official-a-project-frontend-online-store/images/checkout.png\" alt=\"shopping cart icon\" />\n    </button>\n  </Link>\n);\n\nexport default CheckoutProducts;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addProduct, removeProduct } from '../store/ShoppingCart.store';\n\nconst QuantityButtons = ({ setPrice, price, product }) => {\n  const shoppingCart = useSelector((state) => state.shoppingCart);\n  const dispatch = useDispatch();\n  const [productQuantity, setProductQuantity] = useState(\n    shoppingCart.productInfo[product.id].quantity,\n  );\n\n  const quantityHandle = (value) => {\n    setProductQuantity(value);\n  };\n\n  useEffect(() => {\n    if (productQuantity >= product.available_quantity) {\n      document.querySelector(`#${product.id}`).style.display = 'none';\n    } else {\n      document.querySelector(`#${product.id}`).style.display = 'initial';\n    }\n  }, [productQuantity, product.available_quantity, product.id]);\n\n  const priceHandle = (value) => {\n    setPrice(value);\n  };\n\n  return (\n    <div>\n      <button\n        data-testid=\"product-decrease-quantity\"\n        type=\"button\"\n        onClick={ () => {\n          dispatch(removeProduct(product));\n          const sub = price - product.price;\n          priceHandle((productQuantity > 0) ? sub : price);\n          quantityHandle((productQuantity === 0) ? 0 : productQuantity - 1);\n        } }\n      >\n        -\n      </button>\n      <span>{productQuantity}</span>\n      <button\n        data-testid=\"product-increase-quantity\"\n        type=\"button\"\n        id={ product.id }\n        onClick={ () => {\n          dispatch(addProduct(product));\n          const sum = price + product.price;\n          priceHandle(sum);\n          quantityHandle(productQuantity + 1);\n        } }\n      >\n        +\n      </button>\n    </div>\n  );\n};\n\nQuantityButtons.propTypes = {\n  product: PropTypes.oneOfType(\n    [\n      PropTypes.string,\n      PropTypes.object,\n    ],\n  ).isRequired,\n  setPrice: PropTypes.func.isRequired,\n  price: PropTypes.number.isRequired,\n};\n\nexport default QuantityButtons;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport QuantityButtons from '../QuantityButtons';\n\nconst ShoppingCartProduct = ({ product, setPrice, price }) => (\n  <div className=\"product-cart-card\">\n    <div className=\"product-image\"><img src={ product.thumbnail } alt={ product.title } /></div>\n    <p data-testid=\"shopping-cart-product-name\">\n      {product.title}\n    </p>\n    <QuantityButtons setPrice={ setPrice } price={ price } product={ product } />\n    <p className=\"price\">\n      {product.price}\n    </p>\n  </div>\n);\n\nShoppingCartProduct.propTypes = {\n  product: PropTypes.oneOfType(\n    [\n      PropTypes.string,\n      PropTypes.object,\n    ],\n  ).isRequired,\n  setPrice: PropTypes.func.isRequired,\n  price: PropTypes.number.isRequired,\n};\n\nexport default ShoppingCartProduct;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport BackArrow from '../components/BackArrow';\nimport CheckoutProducts from '../components/ShoppingCart/CheckoutProducts';\nimport ShoppingCartProduct from '../components/ShoppingCart/ShoppingCartProduct';\n\nconst ShoppingCart = () => {\n  const shoppingCart = useSelector((state) => state.shoppingCart);\n  const [price, setPrice] = useState(shoppingCart.totalPrice);\n\n  return (\n    <>\n      <header className=\"shopping-cart-header\">\n        <BackArrow />\n        <CheckoutProducts />\n      </header>\n      {Object.values(shoppingCart.productInfo).length < 1\n        ? (\n          <main id=\"shopping-cart\">\n            <h1 data-testid=\"shopping-cart-empty-message\" id=\"shopping-cart-empty-message\">\n              O seu carrinho está vazio\n            </h1>\n          </main>\n        )\n        : (\n          <div className=\"products-in-cart\">\n            {Object.values(shoppingCart.productInfo).map((product) => (\n              <ShoppingCartProduct\n                price={ price }\n                setPrice={ setPrice }\n                product={ product }\n                key={ product.id }\n              />\n            ))}\n            <span className=\"price total-price\">\n              {shoppingCart.totalPrice}\n            </span>\n          </div>\n        )}\n      <p><a href=\"https://icons8.com/icon/26191/back-arrow\">Back Arrow icon by Icons8</a></p>\n    </>\n  );\n};\n\nexport default ShoppingCart;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport BackArrow from '../components/BackArrow';\nimport brazilianStates from '../data/brazilianStates.json'\n\nconst CheckoutProducts = () => {\n  const shoppingCart = useSelector((state) => state.shoppingCart);\n\n  const handleForm = () => <Redirect to=\"/\" />;\n  if (shoppingCart.totalPrice === 0) return <Redirect to=\"/\" />;\n\n  return (\n    <form\n      onSubmit={ (e) => {\n        e.preventDefault();\n        handleForm();\n      } }\n    >\n      <BackArrow />\n      <div className=\"products\">\n        <h2>Revise seus Produtos</h2>\n        {Object.values(shoppingCart.productInfo).map((product) => (\n          <div key={ product.id }>\n            <img src={ product.thumbnail } alt={ product.title } />\n            <p>{product.title}</p>\n            <p className=\"price\">{product.price}</p>\n          </div>\n        ))}\n        <span className=\"price total-price\">{shoppingCart.totalPrice}</span>\n      </div>\n      <h2>Informações do Comprador</h2>\n      <div className=\"client-info\">\n        <div>\n          <input\n            type=\"text\"\n            id=\"full-name\"\n            placeholder=\"Nome Completo\"\n            data-testid=\"checkout-fullname\"\n          />\n          <input\n            type=\"text\"\n            id=\"cpf\"\n            placeholder=\"CPF\"\n            data-testid=\"checkout-cpf\"\n          />\n          <input\n            type=\"email\"\n            id=\"client-email\"\n            placeholder=\"Email\"\n            data-testid=\"checkout-email\"\n          />\n          <input\n            type=\"tel\"\n            id=\"telephone\"\n            placeholder=\"Telefone\"\n            data-testid=\"checkout-phone\"\n          />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"CEP\"\n            title=\"Please enter a Zip Code\"\n            pattern=\"^\\s*?\\d{5}(?:[-\\s]\\d{4})?\\s*?$\"\n            data-testid=\"checkout-cep\"\n          />\n          <input\n            type=\"text\"\n            id=\"address\"\n            placeholder=\"Endereço\"\n            data-testid=\"checkout-address\"\n          />\n        </div>\n        <div>\n          <input type=\"text\" id=\"complement\" placeholder=\"Complemento\" />\n          <input type=\"number\" id=\"house-number\" placeholder=\"Número\" />\n          <input type=\"text\" id=\"city\" placeholder=\"Cidade\" />\n          <select id=\"state\" placeholder=\"Estado\">\n            {brazilianStates.map(\n              (val) => <option key={val} value={val}>{val}</option>\n            )}\n          </select>\n        </div>\n        <h2>Métodos de Pagamento</h2>\n        <div className=\"payment-method\">\n          <label htmlFor=\"boleto\">\n            <input type=\"radio\" name=\"payment\" value=\"boleto\" id=\"boleto\" />\n            Boleto\n          </label>\n          <p>Cartão de crédito</p>\n          <div id=\"credit-card\">\n            <label htmlFor=\"visa\">\n              <input type=\"radio\" name=\"payment\" value=\"visa\" id=\"visa\" />\n              Visa\n            </label>\n            <label htmlFor=\"mastercard\">\n              <input type=\"radio\" name=\"payment\" value=\"mastercard\" id=\"mastercard\" />\n              MasterCard\n            </label>\n            <label htmlFor=\"elo\">\n              <input type=\"radio\" name=\"payment\" value=\"elo\" id=\"elo\" />\n              Elo\n            </label>\n          </div>\n        </div>\n      </div>\n      <button type=\"submit\" id=\"confirm-purchase-button\">Comprar</button>\n    </form>\n  );\n};\n\nexport default CheckoutProducts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Rate = ({ handleClickStars }) => {\n  const iterationNumber = 5;\n  return (\n    [...Array(iterationNumber)].map((x, num) => (\n      <span\n        key={ num + 1 }\n        className=\"star\"\n        role=\"button\"\n        tabIndex={ 0 }\n        onKeyPress={ () => {} }\n        onClick={ () => {\n          const maxStars = 4;\n          const star = (i) => document.querySelectorAll('.star')[i];\n          for (let i = 0; i <= num; i += 1) {\n            star(i).innerHTML = '&#9733;';\n          }\n          for (let n = num + 1; n <= maxStars; n += 1) {\n            star(n).innerHTML = '&#9734;';\n          }\n          handleClickStars();\n        } }\n      >\n        &#9734;\n      </span>\n    ))\n  );\n};\n\nRate.propTypes = {\n  handleClickStars: PropTypes.func.isRequired,\n};\n\nexport default Rate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ReviewCard = ({ review }) => (\n  <div className=\"review-card\">\n    <div>\n      <p>{review.email}</p>\n      <p>{review.stars}</p>\n    </div>\n    <p>{review.text}</p>\n  </div>\n);\n\nReviewCard.propTypes = {\n  review: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nexport default ReviewCard;\n","import React, { useState } from 'react';\nimport PropTypes, { arrayOf } from 'prop-types';\nimport Rate from './Rate';\nimport ReviewCard from './ReviewCard';\n\nconst Review = ({ setReview, oldReview, id }) => {\n  const [data, setData] = useState({ email: '', stars: '', text: '' });\n\n  const handleClickStars = () => {\n    const stars = document.querySelector('#email-line').innerText;\n    setData({ ...data, stars });\n  };\n\n  const handleChange = (elem) => setData(\n    { ...data, [elem.id]: elem.value },\n  );\n\n  return (\n    <form\n      className=\"review-form\"\n      onSubmit={ (e) => {\n        e.preventDefault();\n        setReview(\n          [...oldReview,\n            <ReviewCard review={ data } key={ String(Math.random()) } />,\n          ],\n        );\n        const items = (localStorage.getItem(id))\n          ? [data, ...JSON.parse(localStorage.getItem(id))]\n          : `[${JSON.stringify(data)}]`;\n\n        localStorage.setItem(id, (localStorage.getItem(id))\n          ? JSON.stringify(items)\n          : items);\n      } }\n    >\n      <div id=\"email-line\">\n        <input\n          required\n          type=\"email\"\n          placeholder=\"Email\"\n          id=\"email\"\n          onClick={ () => handleClickStars() }\n          onChange={ (e) => handleChange(e.target) }\n        />\n        <Rate handleClickStars={ handleClickStars } />\n      </div>\n      <textarea\n        required\n        cols=\"45\"\n        data-testid=\"product-detail-evaluation\"\n        rows=\"10\"\n        placeholder=\"Mensagem (Opcional)\"\n        id=\"text\"\n        onChange={ (e) => handleChange(e.target) }\n      />\n      <button\n        type=\"submit\"\n      >\n        Avaliar\n      </button>\n    </form>\n  );\n};\n\nReview.propTypes = {\n  setReview: PropTypes.func.isRequired,\n  oldReview: PropTypes.oneOfType([arrayOf(PropTypes.object), PropTypes.array]).isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default Review;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProductInfo = ({ product }) => {\n  const regex = new RegExp('I.jpg$', 'ig');\n  return (\n    <>\n      <div>\n        <h1 data-testid=\"product-detail-name\">\n          {`${product.title} - R$${product.price}`}\n        </h1>\n        {product.shipping.free_shipping\n            && (\n              <span className=\"free-shipping\">\n                <img\n                  src=\"/non-official-a-project-frontend-online-store/images/free-shipping.png\"\n                  alt=\"free shipping icon\"\n                  data-testid=\"free-shipping\"\n                />\n                Frete Grátis\n              </span>\n            )}\n      </div>\n      <div className=\"product-specs\">\n        <img\n          src={ (product.thumbnail !== undefined)\n            ? product.thumbnail.replace(regex, 'O.jpg')\n            : undefined }\n          alt={ product.title }\n        />\n        <ul>\n          {product.attributes !== undefined\n              && product.attributes.map(({ name, value_name: value, id }) => (\n                <li key={ id }>\n                  <strong>{`${name}: `}</strong>\n                  {value}\n                </li>\n              ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nProductInfo.propTypes = {\n  product: PropTypes.oneOfType(\n    [\n      PropTypes.string,\n      PropTypes.object,\n    ],\n  ).isRequired,\n};\n\nexport default ProductInfo;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addProductByQuantity } from '../store/ShoppingCart.store';\nimport { useParams } from 'react-router-dom';\nimport BackArrow from '../components/BackArrow';\nimport Review from '../components/ProductDetails/Review';\nimport ShoppingCartIcon from '../components/ShoppingCart/ShoppingCartIcon';\nimport * as api from '../services/api';\nimport ReviewCard from '../components/ProductDetails/ReviewCard';\nimport ProductInfo from '../components/ProductDetails/ProductInfo';\n\nconst ProductDetails = () => {\n  const shoppingCart = useSelector((state) => state.shoppingCart);\n  const [loading, setLoading] = useState(true);\n  const dispatch = useDispatch();\n  const [product, setProduct] = useState({});\n  const { id: urlID } = useParams();\n  const pQuantity = shoppingCart.productInfo[urlID];\n  const [quantity, setQuantity] = useState(0);\n  const [review, setReview] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const fetchedProduct = await api.getProductByID(urlID);\n      setProduct(fetchedProduct);\n    }\n    setLoading(false);\n    fetchData();\n  }, [urlID]);\n\n  if (loading) return <h1>Carregando...</h1>;\n\n  return (\n    <div className=\"shopping-cart\">\n      <BackArrow />\n      <div className=\"product-details\">\n        {product.title !== undefined && <ProductInfo product={ product } />}\n        <button\n          type=\"button\"\n          onClick={ () => setQuantity((quantity === 0) ? 0 : quantity - 1) }\n        >\n          -\n        </button>\n        <span>{quantity}</span>\n        {(((pQuantity === undefined)\n          ? 0 : pQuantity.quantity) < product.available_quantity\n          && quantity < product.available_quantity)\n          && (\n            <button\n              type=\"button\"\n              id=\"plus-button\"\n              onClick={ () => setQuantity(quantity + 1) }\n            >\n              +\n            </button>\n          )}\n        <button\n          type=\"button\"\n          data-testid=\"product-detail-add-to-cart\"\n          onClick={ () => {\n            dispatch(addProductByQuantity({\n              ...product,\n              quantity,\n            }));\n            setQuantity(0);\n          } }\n        >\n          Adicionar ao carrinho\n        </button>\n        <Review\n          setReview={ setReview }\n          oldReview={ review }\n          id={ urlID }\n        />\n        <div className=\"reviews\">\n          {localStorage.getItem(urlID)\n          && JSON.parse(localStorage.getItem(urlID)).map(\n            (obj) => <ReviewCard review={ obj } key={ Math.random() } />,\n          )}\n        </div>\n      </div>\n      <ShoppingCartIcon />\n    </div>\n  );\n};\n\nexport default ProductDetails;\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch as Routes } from 'react-router-dom';\r\nimport Search from './pages/Search';\r\nimport ShoppingCart from './pages/ShoppingCart';\r\nimport CheckoutProducts from './pages/CheckoutProducts';\r\nimport ProductDetails from './pages/ProductDetails';\r\nimport './App.css';\r\n\r\n// {\r\n//   \"id\": \"MLB5672\",\r\n//   \"name\": \"Acessórios para Veículos\"\r\n// },\r\nfunction App() {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Routes>\r\n        <Route exact path=\"/\" component={ Search } />\r\n        <Route exact path=\"/shopping-cart\" component={ ShoppingCart } />\r\n        <Route exact path=\"/checkout-products\" component={ CheckoutProducts } />\r\n        <Route exact path=\"/:id\" component={ ProductDetails } />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './store';\r\nimport { Provider } from 'react-redux'\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}